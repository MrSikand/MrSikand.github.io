{"version":3,"sources":["webpack:///./src/template/tags.js"],"names":["pageQuery","Tags","data","allMdx","edges","tagHeader","totalCount","style","paddingBottom","className","map","node","slug","fields","title","frontmatter","key","color","to","date","excerpt"],"mappings":"8FAAA,kGAkEaA,EAAS,aAwBPC,UArFF,SAAC,GAAc,IAAD,IAAXC,KACqBC,OAA3BC,EADiB,EACjBA,MACFC,EAAS,sBAFU,EACVC,WAEf,OACE,kBAAC,IAAD,KACE,gCACE,wBAAIC,MAAO,CAAEC,cAAe,SAAWH,IAEzC,6BAASI,UAAU,0BAChBL,EAAMM,KAAI,YAAe,IAAZC,EAAW,EAAXA,KACJC,EAASD,EAAKE,OAAdD,KACAE,EAAUH,EAAKI,YAAfD,MACR,OACE,yBAAKE,IAAKJ,GACR,yBAAKH,UAAU,qBACb,yBAAKA,UAAU,+BACb,wBAAIA,UAAU,cACZ,kBAAC,IAAD,CACEA,UAAU,YACVF,MAAO,CAAEU,MAAO,SAChBC,GAAIN,GAEHE,IAGL,0BAAML,UAAU,cAAcE,EAAKI,YAAYI,MAC/C,uBAAGV,UAAU,wBACVE,EAAKI,YAAYK","file":"component---src-template-tags-js-b1c543d7509e1c8bca2f.js","sourcesContent":["import React from \"react\"\r\nimport PropTypes from \"prop-types\"\r\nimport { Link, graphql } from \"gatsby\"\r\nimport Layout from \"../components/layout\"\r\n\r\nconst Tags = ({ data }) => {\r\n  const { edges, totalCount } = data.allMdx\r\n  const tagHeader = `Number of posts is ${totalCount}`\r\n  return (\r\n    <Layout>\r\n      <center>\r\n        <h1 style={{ paddingBottom: \"20px\" }}>{tagHeader}</h1>\r\n      </center>\r\n      <section className=\"site-content container\">\r\n        {edges.map(({ node }) => {\r\n          const { slug } = node.fields\r\n          const { title } = node.frontmatter\r\n          return (\r\n            <div key={slug}>\r\n              <div className=\"card content-card\">\r\n                <div className=\"card-body content-card-body\">\r\n                  <h5 className=\"card-title\">\r\n                    <Link\r\n                      className=\"card-link\"\r\n                      style={{ color: \"black\" }}\r\n                      to={slug}\r\n                    >\r\n                      {title}\r\n                    </Link>\r\n                  </h5>\r\n                  <span className=\"text-muted\">{node.frontmatter.date}</span>\r\n                  <p className=\"card-text text-muted\">\r\n                    {node.frontmatter.excerpt}\r\n                  </p>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          )\r\n        })}\r\n      </section>\r\n    </Layout>\r\n  )\r\n}\r\nTags.propTypes = {\r\n  pageContext: PropTypes.shape({\r\n    tag: PropTypes.string.isRequired,\r\n  }),\r\n  data: PropTypes.shape({\r\n    allMarkdownRemark: PropTypes.shape({\r\n      totalCount: PropTypes.number.isRequired,\r\n      edges: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          node: PropTypes.shape({\r\n            frontmatter: PropTypes.shape({\r\n              title: PropTypes.string.isRequired,\r\n            }),\r\n            fields: PropTypes.shape({\r\n              slug: PropTypes.string.isRequired,\r\n            }),\r\n          }),\r\n        }).isRequired\r\n      ),\r\n    }),\r\n  }),\r\n}\r\n\r\nexport const pageQuery = graphql`\r\n  query($tag: String) {\r\n    allMdx(\r\n      limit: 2000\r\n      sort: { fields: [frontmatter___date], order: DESC }\r\n      filter: {\r\n        frontmatter: { tags: { in: [$tag] }, type: { ne: \"newsletter\" } }\r\n      }\r\n    ) {\r\n      totalCount\r\n      edges {\r\n        node {\r\n          fields {\r\n            slug\r\n          }\r\n          frontmatter {\r\n            title\r\n          }\r\n        }\r\n      }\r\n    }\r\n  }\r\n`\r\n\r\nexport default Tags\r\n"],"sourceRoot":""}