{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["firebase","initializeApp","apiKey","authDomain","projectId","storageBucket","messagingSenderId","appId","measurementId","auth","firestore","SignIn","onClick","provider","GoogleAuthProvider","signInWithPopup","SignOut","currentUser","signOut","ChatRoom","dummy","useRef","messagesRef","collection","query","orderBy","limit","useCollectionData","idField","messages","useState","formValue","setFormValue","sendMessage","e","a","preventDefault","uid","photoURL","add","text","createdAt","FieldValue","serverTimestamp","current","scrollIntoView","behaviour","map","msg","ChatMessage","message","id","ref","onSubmit","value","onChange","target","type","props","messageClass","className","src","App","useAuthState","user","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"0RAUAA,IAASC,cAAc,CACtBC,OAAQ,0CACRC,WAAY,sCACZC,UAAW,sBACXC,cAAe,kCACfC,kBAAmB,eACnBC,MAAO,4CACPC,cAAe,iBAGhB,IAAMC,EAAOT,IAASS,OAChBC,EAAYV,IAASU,YAe3B,SAASC,IAMR,OAAO,wBAAQC,QALU,WACxB,IAAMC,EAAW,IAAIb,IAASS,KAAKK,mBACnCL,EAAKM,gBAAgBF,IAGf,iCAGR,SAASG,IACR,OAAOP,EAAKQ,aAAe,wBAAQL,QAAS,kBAAMH,EAAKS,WAA5B,sBAG5B,SAASC,IACR,IAAMC,EAAQC,mBACRC,EAAcZ,EAAUa,WAAW,YACnCC,EAAQF,EAAYG,QAAQ,aAAaC,MAAM,IAHlC,EAKAC,YAAkBH,EAAO,CAAEI,QAAS,OAAhDC,EALY,sBAMeC,mBAAS,IANxB,mBAMZC,EANY,KAMDC,EANC,KAQbC,EAAW,uCAAG,WAAOC,GAAP,mBAAAC,EAAA,6DACnBD,EAAEE,iBADiB,EAGO3B,EAAKQ,YAAvBoB,EAHW,EAGXA,IAAKC,EAHM,EAGNA,SAHM,SAKbhB,EAAYiB,IAAI,CACrBC,KAAMT,EACNU,UAAWzC,IAASU,UAAUgC,WAAWC,kBACzCN,MACAC,aATkB,OAYnBN,EAAa,IAEbZ,EAAMwB,QAAQC,eAAe,CAAEC,UAAW,WAdvB,2CAAH,sDAiBjB,OACC,qCACC,iCACEjB,GAAYA,EAASkB,KAAI,SAACC,GAAD,OAAS,cAACC,EAAD,CAA0BC,QAASF,GAAjBA,EAAIG,OACzD,qBAAKC,IAAKhC,OAEX,uBAAMiC,SAAUpB,EAAhB,UACC,uBAAOqB,MAAOvB,EAAWwB,SAAU,SAACrB,GAAD,OAAOF,EAAaE,EAAEsB,OAAOF,UAChE,wBAAQG,KAAK,SAAb,gCAMJ,SAASR,EAAYS,GAAQ,IAAD,EACKA,EAAMR,QAA9BV,EADmB,EACnBA,KAAMH,EADa,EACbA,IAAKC,EADQ,EACRA,SACbqB,EAAetB,IAAQ5B,EAAKQ,YAAYoB,IAAM,OAAS,WAC7D,OACC,sBAAKuB,UAAS,kBAAaD,GAA3B,UACC,qBAAKE,IAAKvB,GAAY,0DACtB,4BAAIE,OAIQsB,MA5Ef,WAAgB,IAAD,EACCC,YAAatD,GAArBuD,EADO,oBAEd,OACC,sBAAKJ,UAAU,MAAf,UACC,mCACC,sEACA,cAAC5C,EAAD,OAGD,kCAAUgD,EAAO,cAAC7C,EAAD,IAAe,cAACR,EAAD,UCnBpBsD,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCDdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.417fe659.chunk.js","sourcesContent":["import React, { useState, useRef } from \"react\";\nimport \"./App.css\";\n\nimport firebase from \"firebase/app\";\nimport \"firebase/firestore\";\nimport \"firebase/auth\";\n\nimport { useAuthState } from \"react-firebase-hooks/auth\";\nimport { useCollectionData } from \"react-firebase-hooks/firestore\";\n\nfirebase.initializeApp({\n\tapiKey: \"AIzaSyATQJX_MJV2FBYP2-itScdvC38EmWUMq_0\",\n\tauthDomain: \"superchat-app-beb6f.firebaseapp.com\",\n\tprojectId: \"superchat-app-beb6f\",\n\tstorageBucket: \"superchat-app-beb6f.appspot.com\",\n\tmessagingSenderId: \"978172304835\",\n\tappId: \"1:978172304835:web:b46e8e9e9d31c5bf6cf176\",\n\tmeasurementId: \"G-NGXXN1PRZT\",\n});\n\nconst auth = firebase.auth();\nconst firestore = firebase.firestore();\nfunction App() {\n\tconst [user] = useAuthState(auth);\n\treturn (\n\t\t<div className=\"App\">\n\t\t\t<header>\n\t\t\t\t<h1>‚öõÔ∏èüî•üí¨</h1>\n\t\t\t\t<SignOut />\n\t\t\t</header>\n\n\t\t\t<section>{user ? <ChatRoom /> : <SignIn />}</section>\n\t\t</div>\n\t);\n}\n\nfunction SignIn() {\n\tconst signInWithGoogle = () => {\n\t\tconst provider = new firebase.auth.GoogleAuthProvider();\n\t\tauth.signInWithPopup(provider);\n\t};\n\n\treturn <button onClick={signInWithGoogle}>Sign in with Google</button>;\n}\n\nfunction SignOut() {\n\treturn auth.currentUser && <button onClick={() => auth.signOut()}>Sign Out</button>;\n}\n\nfunction ChatRoom() {\n\tconst dummy = useRef();\n\tconst messagesRef = firestore.collection(\"messages\");\n\tconst query = messagesRef.orderBy(\"createdAt\").limit(25);\n\n\tconst [messages] = useCollectionData(query, { idField: \"id\" });\n\tconst [formValue, setFormValue] = useState(\"\");\n\n\tconst sendMessage = async (e) => {\n\t\te.preventDefault();\n\n\t\tconst { uid, photoURL } = auth.currentUser;\n\n\t\tawait messagesRef.add({\n\t\t\ttext: formValue,\n\t\t\tcreatedAt: firebase.firestore.FieldValue.serverTimestamp(),\n\t\t\tuid,\n\t\t\tphotoURL,\n\t\t});\n\n\t\tsetFormValue(\"\");\n\n\t\tdummy.current.scrollIntoView({ behaviour: \"smooth\" });\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<main>\n\t\t\t\t{messages && messages.map((msg) => <ChatMessage key={msg.id} message={msg} />)}\n\t\t\t\t<div ref={dummy}></div>\n\t\t\t</main>\n\t\t\t<form onSubmit={sendMessage}>\n\t\t\t\t<input value={formValue} onChange={(e) => setFormValue(e.target.value)} />\n\t\t\t\t<button type=\"submit\">üïä</button>\n\t\t\t</form>\n\t\t</>\n\t);\n}\n\nfunction ChatMessage(props) {\n\tconst { text, uid, photoURL } = props.message;\n\tconst messageClass = uid === auth.currentUser.uid ? \"sent\" : \"received\";\n\treturn (\n\t\t<div className={`message ${messageClass}`}>\n\t\t\t<img src={photoURL || \"https://api.adorable.io/avatars/23/abott@adorable.png\"} />\n\t\t\t<p>{text}</p>\n\t\t</div>\n\t);\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}